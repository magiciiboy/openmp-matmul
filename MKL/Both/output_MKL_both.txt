


THREAD=4;SIZE=5000;OUTER=2;INNER=2
COMPILE---------------------------------------
Using optimization MKL
icc: warning #10315: specifying -lm before files may supersede the Intel(R) math library and affect performance
icc: warning #10315: specifying -lm before files may supersede the Intel(R) math library and affect performance
PAPI--------------------

-------------------------------
Evaluation Begin
-------------------------------

Gathering General Metrics

Evaluating code for: PAPI_SP_OPS

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.267826 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.245756 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.251175 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary
2.507E+11
2.507E+11
2.507E+11

---------------------------------------------------------------------------------------

Gathering L1 Cache Behavior

Evaluating code for: PAPI_L1_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.252711 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.246085 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.250087 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary
1.194E+09
1.194E+09
1.194E+09

---------------------------------------------------------------------------------------

Gathering L2 Cache Behavior

Evaluating code for: PAPI_L2_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.249601 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.245285 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.245858 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary
1.226E+08
1.188E+08
1.172E+08

---------------------------------------------------------------------------------------

Gathering L3 Cache Behavior

Evaluating code for: PAPI_L3_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.244948 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.247290 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.251797 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

Summary
2.98E+07
3E+07
2.87E+07

---------------------------------------------------------------------------------------

-------------------------------
Evaluation Complete
-------------------------------
SUMMARY-----------------------------------------

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(5000x5000) and matrix B(5000x5000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 1.255179 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
        5001        5002        5003        5004        5005        5006
       10001       10002       10003       10004       10005       10006
       15001       15002       15003       15004       15005       15006
       20001       20002       20003       20004       20005       20006
       25001       25002       25003       25004       25005       25006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
       -5001       -5002       -5003       -5004       -5005       -5006
      -10001      -10002      -10003      -10004      -10005      -10006
      -15001      -15002      -15003      -15004      -15005      -15006
      -20001      -20002      -20003      -20004      -20005      -20006
      -25001      -25002      -25003      -25004      -25005      -25006

 Top left corner of matrix C: 
 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14 -2.0833E+14
 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14 -5.2077E+14
 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14 -8.3321E+14
 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15 -1.1456E+15
 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15 -1.4581E+15
 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15 -1.7705E+15

 Deallocating memory 

 Example completed. 

---------------------------
Reading Profile files in profile.*

NODE 0;CONTEXT 0;THREAD 0:
---------------------------------------------------------------------------------------
%Time   Exclusive   Inclusive       #Call      #Subrs Count/Call Name
           counts total counts                            
---------------------------------------------------------------------------------------
100.0        1017    2.87E+07           1           1   28700970 .TAU application
100.0    2.87E+07    2.87E+07           1           0   28699953 int main() C 
RAPL
----------------------------
		package-0	: 82.409885J
		package-0	: 83.531036J
		package-0	: 82.696931J



THREAD=4;SIZE=10000;OUTER=2;INNER=2
COMPILE---------------------------------------
Using optimization MKL
icc: warning #10315: specifying -lm before files may supersede the Intel(R) math library and affect performance
icc: warning #10315: specifying -lm before files may supersede the Intel(R) math library and affect performance
PAPI--------------------

-------------------------------
Evaluation Begin
-------------------------------

Gathering General Metrics

Evaluating code for: PAPI_SP_OPS

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.608439 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.593681 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.602848 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary
2.507E+11
2.507E+11
2.507E+11
2.003E+12
2.003E+12
2.003E+12

---------------------------------------------------------------------------------------

Gathering L1 Cache Behavior

Evaluating code for: PAPI_L1_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.560470 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.634425 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.605730 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary
1.194E+09
1.194E+09
1.194E+09
9.481E+09
9.48E+09
9.481E+09

---------------------------------------------------------------------------------------

Gathering L2 Cache Behavior

Evaluating code for: PAPI_L2_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.610525 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.571885 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.643932 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary
1.226E+08
1.188E+08
1.172E+08
8.49E+08
8.712E+08
8.916E+08

---------------------------------------------------------------------------------------

Gathering L3 Cache Behavior

Evaluating code for: PAPI_L3_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.598164 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.611597 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.606468 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

Summary
2.98E+07
3E+07
2.87E+07
2.381E+08
2.51E+08
2.455E+08

---------------------------------------------------------------------------------------

-------------------------------
Evaluation Complete
-------------------------------
SUMMARY-----------------------------------------

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(10000x10000) and matrix B(10000x10000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 9.551899 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       10001       10002       10003       10004       10005       10006
       20001       20002       20003       20004       20005       20006
       30001       30002       30003       30004       30005       30006
       40001       40002       40003       40004       40005       40006
       50001       50002       50003       50004       50005       50006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -10001      -10002      -10003      -10004      -10005      -10006
      -20001      -20002      -20003      -20004      -20005      -20006
      -30001      -30002      -30003      -30004      -30005      -30006
      -40001      -40002      -40003      -40004      -40005      -40006
      -50001      -50002      -50003      -50004      -50005      -50006

 Top left corner of matrix C: 
 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15 -3.3333E+15
 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15 -8.3328E+15
 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16 -1.3332E+16
 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16 -1.8332E+16
 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16 -2.3331E+16
 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16 -2.8331E+16

 Deallocating memory 

 Example completed. 

---------------------------
Reading Profile files in profile.*

NODE 0;CONTEXT 0;THREAD 0:
---------------------------------------------------------------------------------------
%Time   Exclusive   Inclusive       #Call      #Subrs Count/Call Name
           counts total counts                            
---------------------------------------------------------------------------------------
100.0         740   2.455E+08           1           1  245453791 .TAU application
100.0   2.455E+08   2.455E+08           1           0  245453051 int main() C 
RAPL
----------------------------
		package-0	: 633.647547J
		package-0	: 604.926369J
		package-0	: 587.464377J



THREAD=4;SIZE=40000;OUTER=2;INNER=2
COMPILE---------------------------------------
Using optimization MKL
icc: warning #10315: specifying -lm before files may supersede the Intel(R) math library and affect performance
icc: warning #10315: specifying -lm before files may supersede the Intel(R) math library and affect performance
PAPI--------------------

-------------------------------
Evaluation Begin
-------------------------------

Gathering General Metrics

Evaluating code for: PAPI_SP_OPS

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(40000x40000) and matrix B(40000x40000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 618.691028 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       40001       40002       40003       40004       40005       40006
       80001       80002       80003       80004       80005       80006
      120001      120002      120003      120004      120005      120006
      160001      160002      160003      160004      160005      160006
      200001      200002      200003      200004      200005      200006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -40001      -40002      -40003      -40004      -40005      -40006
      -80001      -80002      -80003      -80004      -80005      -80006
     -120001     -120002     -120003     -120004     -120005     -120006
     -160001     -160002     -160003     -160004     -160005     -160006
     -200001     -200002     -200003     -200004     -200005     -200006

 Top left corner of matrix C: 
 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17
 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18
 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18
 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18
 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18
 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(40000x40000) and matrix B(40000x40000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 615.605655 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       40001       40002       40003       40004       40005       40006
       80001       80002       80003       80004       80005       80006
      120001      120002      120003      120004      120005      120006
      160001      160002      160003      160004      160005      160006
      200001      200002      200003      200004      200005      200006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -40001      -40002      -40003      -40004      -40005      -40006
      -80001      -80002      -80003      -80004      -80005      -80006
     -120001     -120002     -120003     -120004     -120005     -120006
     -160001     -160002     -160003     -160004     -160005     -160006
     -200001     -200002     -200003     -200004     -200005     -200006

 Top left corner of matrix C: 
 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17
 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18
 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18
 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18
 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18
 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(40000x40000) and matrix B(40000x40000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 613.028859 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       40001       40002       40003       40004       40005       40006
       80001       80002       80003       80004       80005       80006
      120001      120002      120003      120004      120005      120006
      160001      160002      160003      160004      160005      160006
      200001      200002      200003      200004      200005      200006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -40001      -40002      -40003      -40004      -40005      -40006
      -80001      -80002      -80003      -80004      -80005      -80006
     -120001     -120002     -120003     -120004     -120005     -120006
     -160001     -160002     -160003     -160004     -160005     -160006
     -200001     -200002     -200003     -200004     -200005     -200006

 Top left corner of matrix C: 
 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17
 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18
 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18
 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18
 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18
 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18

 Deallocating memory 

 Example completed. 

Summary
2.507E+11
2.507E+11
2.507E+11
2.003E+12
2.003E+12
2.003E+12
1.282E+14
1.282E+14
1.282E+14

---------------------------------------------------------------------------------------

Gathering L1 Cache Behavior

Evaluating code for: PAPI_L1_TCM

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(40000x40000) and matrix B(40000x40000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 623.437012 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       40001       40002       40003       40004       40005       40006
       80001       80002       80003       80004       80005       80006
      120001      120002      120003      120004      120005      120006
      160001      160002      160003      160004      160005      160006
      200001      200002      200003      200004      200005      200006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -40001      -40002      -40003      -40004      -40005      -40006
      -80001      -80002      -80003      -80004      -80005      -80006
     -120001     -120002     -120003     -120004     -120005     -120006
     -160001     -160002     -160003     -160004     -160005     -160006
     -200001     -200002     -200003     -200004     -200005     -200006

 Top left corner of matrix C: 
 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17
 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18
 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18
 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18
 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18
 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18

 Deallocating memory 

 Example completed. 

Summary

 This example computes real matrix C=alpha*A*B+beta*C using 
 Intel(R) MKL function dgemm, where A, B, and  C are matrices and 
 alpha and beta are double precision scalars

 Initializing data for matrix multiplication C=A*B for matrix 
 A(40000x40000) and matrix B(40000x40000)

 Allocating memory for matrices aligned on 64-byte boundary for better 
 performance 

 Intializing matrix data 

 Computing matrix product using Intel(R) MKL dgemm function via CBLAS interface 

Time taken = 622.793043 seconds

 Computations completed.

 Top left corner of matrix A: 
           1           2           3           4           5           6
       40001       40002       40003       40004       40005       40006
       80001       80002       80003       80004       80005       80006
      120001      120002      120003      120004      120005      120006
      160001      160002      160003      160004      160005      160006
      200001      200002      200003      200004      200005      200006

 Top left corner of matrix B: 
          -1          -2          -3          -4          -5          -6
      -40001      -40002      -40003      -40004      -40005      -40006
      -80001      -80002      -80003      -80004      -80005      -80006
     -120001     -120002     -120003     -120004     -120005     -120006
     -160001     -160002     -160003     -160004     -160005     -160006
     -200001     -200002     -200003     -200004     -200005     -200006

 Top left corner of matrix C: 
 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17 -8.5333E+17
 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18 -2.1333E+18
 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18 -3.4133E+18
 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18 -4.6932E+18
 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18 -5.9732E+18
 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18 -7.2532E+18

 Deallocating memory 

 Example completed. 

Summary
slurmstepd: error: *** JOB 4492167 ON c488-122 CANCELLED AT 2019-10-13T13:23:45 DUE TO TIME LIMIT ***
